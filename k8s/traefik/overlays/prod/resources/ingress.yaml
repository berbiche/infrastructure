apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy
  namespace: traefik
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.tls: "true"
    external-dns.alpha.kubernetes.io/target: k8s.qt.rs
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - traefik.k8s.qt.rs
    - auth.k8s.qt.rs
    secretName: traefik-k8s-qt-rs-tls
  rules:
  - host: auth.k8s.qt.rs
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              name: oauth2-proxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-empty-gateway-ingress
  namespace: traefik
  annotations:
    external-dns.alpha.kubernetes.io/target: k8s.qt.rs
spec:
  ingressClassName: traefik
  rules:
  - host: traefik.k8s.qt.rs
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
  namespace: traefik
  labels:
    app.kubernetes.io/name: traefik
spec:
  entryPoints:
  - websecure
  tls:
    secretName: traefik-k8s-qt-rs-tls
  routes:
  - match: Host(`traefik.k8s.qt.rs`)
    kind: Rule
    middlewares:
    - name: forward-auth
      namespace: traefik
    - name: not-found-status-page
      namespace: traefik
    services:
    - name: api@internal
      kind: TraefikService
