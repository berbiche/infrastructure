#+TITLE: Kubernetes cluster applications

* Technologies
- Kustomize to scaffold, modify and apply patches on top of external resources
- Cert-manager to manage certificates
- metallb to manage ip allocation in the cluster
- calico as the CNI
- longhorn for disk and storage provisioning
- ExternalDNS to expose DNS records to Cloudflare

* Kustomize

#+begin_example
kustomize build --enable-alpha-plugins something/overlays/prod
kustomize build --enable-alpha-plugins something/overlays/prod | kubectl apply -f -
#+end_example

* ExternalDNS
ExternalDNS automatically inserts CNAME entries to ~k8s.qt.rs~ for each ingress I define
and annotate with the ~external-dns.alpha.kubernetes.io/target: k8s.qt.rs~.

While I could use a generic =*= CNAME entry that points to ~k8s.qt.rs~, I prefer having
unresolvable domains (this is not a security by obscurity thing, I'd rather have an NX domain than a 404 status page).

Domains that only allow access by administrators (myself) are gated behind a OAuth middleware in Traefik.

* OpenEBS
I use OpenEBS for storage because I have local disks attached directly to my server (i.e. a "hyper-converged" installation).

+I use the Mayastor backend instead of the Jiva/cStor because the performance of the backend seemed good.+
Mayastor's model currently uses a busy-loop mecanism to ensure events are always processed
in due time.
The downside is that it uses a full cpu core on a node, increasing the heat and power usage.
I observed an increase in power usage of at least 60W using Mayastor on 4 k8s nodes in Proxmox.
For this reason, I chose to use the cStor backend.

OpenEBS automatically detects disks attached to nodes with [[github:openebs/node-disk-manager][Node Disk Manager]].
Nodes that serve a storage backend for NDM have a label set on them: ~openebs.io/nodegroup: storage-node~.
+These nodes additionnaly have a label to identify the OpenEBS engine running on them: ~openebs.io/engine: mayastor~.+

The cStor pool definition will need to be filled out manually.
After deploying the configuration with ~kustomize build openebs/overlays/prod | kubectl apply -f -~,
obtain the discovered block devices with ~kubectl get blockdevices~.

The list of block devices name will have to be used in the definition of the cStor pool.
