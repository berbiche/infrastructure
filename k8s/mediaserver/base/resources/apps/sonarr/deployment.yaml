apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr-anime
  labels:
    app.kubernetes.io/name: sonarr-anime
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr-anime
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarr-anime
    spec:
      containers:
        - name: sonarr
          image: linuxserver/sonarr:latest
          imagePullPolicy: Always
          ports:
            - name: "http"
              containerPort: 8989
              protocol: TCP
          volumeMounts:
            - name: sonarr-config
              mountPath: /config
            - name: data
              mountPath: /data
            - name: mediaserver-anime
              mountPath: /mediaserver/anime
          envFrom:
            - configMapRef:
                name: mediaserver-permissions
          resources:
            requests:
              cpu: "250m"
              memory: "250Mi"
            limits:
              cpu: "500m"
              memory: "500Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 8989
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 8989
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 5
      volumes:
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: sonarr-config-anime
        - name: data
          emptyDir: {}
        - name: mediaserver-anime
          persistentVolumeClaim:
            claimName: mediaserver-anime
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr-tv
  labels:
    app.kubernetes.io/name: sonarr-tv
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr-tv
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarr-tv
    spec:
      containers:
        - name: sonarr
          image: linuxserver/sonarr:latest
          imagePullPolicy: Always
          ports:
            - name: "http"
              containerPort: 8989
              protocol: TCP
          volumeMounts:
            - name: sonarr-config
              mountPath: /config
            - name: data
              mountPath: /data
            - name: mediaserver-tv
              mountPath: /mediaserver/tv
          envFrom:
            - configMapRef:
                name: mediaserver-permissions
          resources:
            requests:
              cpu: "250m"
              memory: "250Mi"
            limits:
              cpu: "500m"
              memory: "500Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 8989
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 8989
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 5
      volumes:
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: sonarr-config-tv
        - name: data
          emptyDir: {}
        - name: mediaserver-tv
          persistentVolumeClaim:
            claimName: mediaserver-tv
