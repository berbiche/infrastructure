---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  labels:
    app.kubernetes.io/name: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarr
    spec:
      containers:
        - name: sonarr
          image: linuxserver/sonarr:latest
          imagePullPolicy: Always
          ports:
            - name: "http"
              containerPort: 8989
              protocol: TCP
          volumeMounts:
            - name: sonarr-config
              mountPath: /config
            - name: data
              mountPath: /data
            - name: mediaserver-anime
              mountPath: /mediaserver/anime
            - name: mediaserver-movies
              mountPath: /mediaserver/movies
            - name: mediaserver-tv
              mountPath: /mediaserver/tv
          envFrom:
            - configMapRef:
                name: mediaserver-permissions
          # resources:
          #   requests:
          #     cpu: "100m"
          #     memory: "250Mi"
          #   limits:
          #     cpu: "100m"
          #     memory: "500Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 8989
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 8989
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 5
      volumes:
        - name: mediaserver-anime
          persistentVolumeClaim:
            claimName: mediaserver-anime
        - name: mediaserver-movies
          persistentVolumeClaim:
            claimName: mediaserver-movies
        - name: mediaserver-tv
          persistentVolumeClaim:
            claimName: mediaserver-tv
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: sonarr-config
        - name: data
          emptyDir: {}
